version: "3.11"

services:
  llm:
    build:
      context: .
      args:
        target: runtime
<<<<<<< HEAD
    image: ghcr.io/hanzo.ai/llm:main-stable
    # Optional: Uncomment these lines if you have a config file for the proxy UI.
    # volumes:
    #   - ./config.yaml:/app/config.yaml
    # command:
    #   - "--config=/app/config.yaml"
=======
    image: ghcr.io/berriai/litellm:main-stable
>>>>>>> 3562ee3f3 (Update compose)
    ports:
      - "4000:4000"  # Exposes container port 4000 to the host (if needed)
    networks:
      - hanzo-network
    environment:
      DATABASE_URL: "postgresql://llmproxy:dbpassword9090@db:5432/llm"
      STORE_MODEL_IN_DB: "True"
    env_file:
      - .env
    volumes:
      - ./config.yaml:/app/config.yaml  # Mounts your config file into the container
    command: >
      sh -c "until nc -z db 5432; do echo 'Waiting for db...'; sleep 2; done;
      echo 'Database is up, starting app';
      exec litellm --config=/app/config.yaml"
    depends_on:
      - db
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:4000/health/liveliness || exit 1" ]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.litellm.rule=Host(`api.hanzo.ai`)"
      - "traefik.http.routers.litellm.entrypoints=websecure"
      - "traefik.http.services.litellm.loadbalancer.server.port=4000"
    deploy:
      replicas: 1  # You can increase this number to scale the service
      restart_policy:
        condition: on-failure

  db:
    image: postgres:16
    restart: always
    environment:
      POSTGRES_DB: llm
      POSTGRES_USER: llmproxy
      POSTGRES_PASSWORD: dbpassword9090
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d llm -U llmproxy"]
      interval: 1s
      timeout: 5s
      retries: 10
    networks:
      - hanzo-network

  prometheus:
    image: prom/prometheus
    volumes:
      - prometheus_data:/prometheus
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090"
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--storage.tsdb.retention.time=15d'
    restart: always
    networks:
      - hanzo-network

volumes:
  prometheus_data:
    driver: local
  postgres_data:
<<<<<<< HEAD
    name: llm_postgres_data
=======
    name: litellm_postgres_data

networks:
  hanzo-network:
    external: true
>>>>>>> 3562ee3f3 (Update compose)
